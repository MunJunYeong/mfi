{"remainingRequest":"C:\\Users\\c\\Desktop\\mfi\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\c\\Desktop\\mfi\\front\\src\\views\\core\\IdeaClick.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\c\\Desktop\\mfi\\front\\src\\views\\core\\IdeaClick.vue","mtime":1630565227000},{"path":"C:\\Users\\c\\Desktop\\mfi\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511710000},{"path":"C:\\Users\\c\\Desktop\\mfi\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1630511710000},{"path":"C:\\Users\\c\\Desktop\\mfi\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511710000},{"path":"C:\\Users\\c\\Desktop\\mfi\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1630511710000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBDb21tZW50SXRlbSBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NvbW1lbnRJdGVtLnZ1ZSc7CmltcG9ydCBqd3RfZGVjb2RlIGZyb20gJ2p3dC1kZWNvZGUnCgpsZXQgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNjZXNzVG9rZW4nKTsKCiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgICAgbmFtZTogJ0lkZWFDbGljaycsCiAgICAgICAgY3JlYXRlZCgpewogICAgICAgICAgICB0aGlzLnNob3dDbGlja0lkZWEoKTsKICAgICAgICAgICAgdGhpcy5zaG93Q29tbWVudCgpOwogICAgICAgIH0sCiAgICAgICAgY29tcG9uZW50cyA6IHsKICAgICAgICAgICAgQ29tbWVudEl0ZW0KICAgICAgICB9LAogICAgICAgIHByb3BzOiBbCiAgICAgICAgICAgICdpZGVhSWR4JywKICAgICAgICBdLAogICAgICAgIGRhdGEoKXsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIHN1YmplY3QgOiAnJywKICAgICAgICAgICAgICAgIG5pY2tOYW1lIDogJycsCiAgICAgICAgICAgICAgICBjcmVhdGVkIDogJycsCiAgICAgICAgICAgICAgICBjb250ZW50IDogJycsCiAgICAgICAgICAgICAgICB1c2VyRGF0YSA6ICBqd3RfZGVjb2RlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NUb2tlbicpKSwKICAgICAgICAgICAgICAgIGN1cnJlbnROaWNrTmFtZSA6ICcnLAogICAgICAgICAgICAgICAgd3JpdGVDb21tZW50IDogJycsCiAgICAgICAgICAgICAgICBDb21tZW50SXRlbSA6IFsKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1vdW50ZWQoKXsKICAgICAgICAgICAgdGhpcy5jdXJyZW50Tmlja05hbWUgPSB0aGlzLnVzZXJEYXRhLm5pY2tOYW1lOwogICAgICAgIH0sCiAgICAgICAgbWV0aG9kcyA6IHsKICAgICAgICAgICAgYXN5bmMgc2hvd0NsaWNrSWRlYSgpewogICAgICAgICAgICAgICAgYXdhaXQgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvaWRlYS9pZGVhLWNsaWNrP2lkZWFJZHg9Jyt0aGlzLmlkZWFJZHgsIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGhlYWRlcnMgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJyA6IHRva2VuCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGFbMF0udXNlcikKICAgICAgICAgICAgICAgICAgICB0aGlzLnN1YmplY3QgPSByZXMuZGF0YS5kYXRhWzBdLnN1YmplY3Q7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5uaWNrTmFtZSA9IHJlcy5kYXRhLmRhdGFbMF0udXNlci5uaWNrTmFtZTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZWQgPSByZXMuZGF0YS5kYXRhWzBdLmNyZWF0ZWQ7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gcmVzLmRhdGEuZGF0YVswXS5jb250ZW50OwogICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFzeW5jIHNob3dDb21tZW50KCl7CiAgICAgICAgICAgICAgICBhd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jb21tZW50P2lkZWFJZHg9JyArIHRoaXMuaWRlYUlkeCwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaGVhZGVycyA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nIDogdG9rZW4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5Db21tZW50SXRlbSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgCiAgICAgICAgICAgIGFzeW5jIGVucm9sbENvbW1lbnQoKXsKICAgICAgICAgICAgICAgIGxldCBjb25maXJtQ29tbWVudCA9IGNvbmZpcm0oJ+uMk+q4gOydhCDstpTqsIDtlZjqsqDsirXri4jquYw/Jyk7CiAgICAgICAgICAgICAgICBpZiAoY29uZmlybUNvbW1lbnQpewogICAgICAgICAgICAgICAgICAgIGF3YWl0IGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jb21tZW50JywKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnQgOiB0aGlzLndyaXRlQ29tbWVudCwKICAgICAgICAgICAgICAgICAgICAgICAgaWRlYUlkeCA6IHRoaXMuaWRlYUlkeAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzIDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nIDogdG9rZW4KICAgICAgICAgICAgICAgICAgICB9ICAgIAogICAgICAgICAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLm1lc3NhZ2UpCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuJHJvdXRlci5nbygpOwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgIH0KCiAgICB9CgoK"},{"version":3,"sources":["IdeaClick.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"IdeaClick.vue","sourceRoot":"src/views/core","sourcesContent":["<template>\n    <v-container>\n        <v-row justify='center'>\n            <v-col cols='4'>\n                <div id=\"subject\">\n                    <h1>{{subject}}</h1>\n                    </div>\n            </v-col>\n            <v-spacer></v-spacer>\n            <v-col cols='1'>\n                <router-link to=\"/add-idea\">\n                    <v-btn style=\"height : 70px\"\n                    block outlined\n                    >아이디어 내기\n                    </v-btn>\n                </router-link>\n            </v-col>\n            \n        </v-row>\n\n        <v-row justify='center'>\n            <v-col cols='3'>\n                <div id=\"profile\"></div>\n                <div style=\"float : left; width: 7%; height: 100%;\"></div>\n                <div style=\"float : left; width: 73%; height: 100%;\">\n                    <p id=\"nickName\">닉네임 : {{nickName}}</p>\n                    <p id=\"created\">{{created}}</p>\n                </div>\n            </v-col>\n            <v-spacer></v-spacer>\n            <v-col cols='1'>\n                <v-btn id=\"modifyBtn\"\n                block outlined\n                >수정\n                </v-btn>\n                \n            </v-col>\n            <v-col cols='1'>\n                <v-btn id=\"deleteBtn\"\n                block outlined\n                >삭제\n                </v-btn>\n            </v-col>\n        </v-row>\n        \n        <!-- 내용 보이는 곳 -->\n        <v-row justify='center'>\n            <v-col cols='9' >\n                <p>{{content}}</p>\n            </v-col>\n        </v-row>\n        <v-row justify='center'>\n            <v-col cols='9' >\n                <v-col cols='3'>\n                    <h2>댓글</h2>\n                </v-col>\n            </v-col>\n        </v-row>\n        \n        <!-- 댓글내용들 -->\n        <v-row justify='center'>\n            <v-col cols='9'>\n                <CommentItem v-for=\"(item,index) in this.CommentItem\" :key=\"index\"\n                :nickName = \"item.user.nickName\"\n                :comment = \"item.comment\"\n                :created = \"item.created\"\n                />\n            </v-col>\n        </v-row>\n        \n        <!-- 댓글적는곳 -->\n        <v-row justify='center'>\n            <v-spacer />\n            <v-col cols='1'>\n                <div style=\"text-align: center; font-weight : bold; height : 55px; line-height : 55px\" >\n                    {{currentNickName}}\n                </div>\n            </v-col>\n            <v-col cols='7' >\n                <v-text-field\n                outlined\n                label = ''\n                v-model=\"writeComment\"\n                >\n                </v-text-field>\n            </v-col>\n            <v-col cols='1'>\n                <v-btn id=\"enrollBtn\" v-on:click=\"enrollComment\"\n                block \n                >등록\n                </v-btn>    \n            </v-col>\n            \n            <v-spacer />\n        </v-row>\n    </v-container>\n    \n</template>\n<script>\nimport axios from 'axios';\nimport CommentItem from '../../components/CommentItem.vue';\nimport jwt_decode from 'jwt-decode'\n\nlet token = localStorage.getItem('accessToken');\n\n    export default {\n        name: 'IdeaClick',\n        created(){\n            this.showClickIdea();\n            this.showComment();\n        },\n        components : {\n            CommentItem\n        },\n        props: [\n            'ideaIdx',\n        ],\n        data(){\n            return {\n                subject : '',\n                nickName : '',\n                created : '',\n                content : '',\n                userData :  jwt_decode(localStorage.getItem('accessToken')),\n                currentNickName : '',\n                writeComment : '',\n                CommentItem : [\n                ],\n            }\n        },\n        mounted(){\n            this.currentNickName = this.userData.nickName;\n        },\n        methods : {\n            async showClickIdea(){\n                await axios.get('http://localhost:8080/idea/idea-click?ideaIdx='+this.ideaIdx, \n                {\n                    headers : {\n                        'Authorization' : token\n                    }\n                }).then(res => {\n                    // console.log(res.data.data[0].user)\n                    this.subject = res.data.data[0].subject;\n                    this.nickName = res.data.data[0].user.nickName;\n                    this.created = res.data.data[0].created;\n                    this.content = res.data.data[0].content;\n                    return;\n                })\n            },\n            async showComment(){\n                await axios.get('http://localhost:8080/comment?ideaIdx=' + this.ideaIdx, \n                {\n                    headers : {\n                        'Authorization' : token\n                    }\n                }).then(res => {\n                    this.CommentItem = res.data.data;\n                    return;\n                })\n            },\n            \n            async enrollComment(){\n                let confirmComment = confirm('댓글을 추가하겠습니까?');\n                if (confirmComment){\n                    await axios.post('http://localhost:8080/comment',\n                    {\n                        comment : this.writeComment,\n                        ideaIdx : this.ideaIdx\n                    },\n                    {\n                        headers : {\n                            'Authorization' : token\n                    }    \n                    }).then(res => {\n                        console.log(res.message)\n                        // this.$router.go();\n                    })\n                }\n            }\n                \n        }\n\n    }\n\n\n</script>\n<style>\n    #subject {\n         line-height: 70px;\n    }\n    #profile{\n        width: 20%; height: 100%; background-image: url('../../assets/profile.png' ); background-size: 100% 100%; float: left;\n        \n    }\n    #nickName {\n\n    }\n    #created {\n\n    }\n    #modifyBtn{\n        height: 50px;\n    }\n    #deleteBtn{\n        height: 50px;\n    }\n\n</style>\n\n"]}]}