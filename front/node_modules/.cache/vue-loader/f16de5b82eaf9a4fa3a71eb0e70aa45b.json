{"remainingRequest":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\msw71\\Desktop\\mfi\\front\\src\\components\\editer\\MenuBar.vue?vue&type=style&index=0&id=a383bf68&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\src\\components\\editer\\MenuBar.vue","mtime":1630511710000},{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1630511710000},{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1630511710000},{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1630511710000},{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1630511710000},{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511710000},{"path":"C:\\Users\\msw71\\Desktop\\mfi\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1630511710000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGl2aWRlciB7CiAgd2lkdGg6IDJweDsKICBoZWlnaHQ6IDEuMjVyZW07CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBtYXJnaW4tbGVmdDogMC41cmVtOwogIG1hcmdpbi1yaWdodDogMC43NXJlbTsKfQo="},{"version":3,"sources":["MenuBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MenuBar.vue","sourceRoot":"src/components/editer","sourcesContent":["<template>\n  <div>\n    <template v-for=\"(item, index) in items\">\n      <div class=\"divider\" v-if=\"item.type === 'divider'\" :key=\"index\" />\n      <menu-item v-else :key=\"index\" v-bind=\"item\" />\n    </template>\n  </div>\n</template>\n\n<script>\nimport MenuItem from './MenuItem.vue'\nexport default {\n  components: {\n    MenuItem,\n  },\n  props: {\n    editor: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      items: [\n        {\n          icon: 'bold',\n          title: 'Bold',\n          action: () => this.editor.chain().focus().toggleBold().run(),\n          isActive: () => this.editor.isActive('bold'),\n        },\n        {\n          icon: 'italic',\n          title: 'Italic',\n          action: () => this.editor.chain().focus().toggleItalic().run(),\n          isActive: () => this.editor.isActive('italic'),\n        },\n        {\n          icon: 'strikethrough',\n          title: 'Strike',\n          action: () => this.editor.chain().focus().toggleStrike().run(),\n          isActive: () => this.editor.isActive('strike'),\n        },\n        {\n          //지워도됨\n          icon: 'code-view',\n          title: 'Code',\n          action: () => this.editor.chain().focus().toggleCode().run(),\n          isActive: () => this.editor.isActive('code'),\n        },\n        {\n          icon: 'mark-pen-line',\n          title: 'Highlight',\n          action: () => this.editor.chain().focus().toggleHighlight().run(),\n          isActive: () => this.editor.isActive('highlight'),\n        },\n        {\n          icon: 'h-1',\n          title: 'Heading 1',\n          action: () => this.editor.chain().focus().toggleHeading({ level: 1 }).run(),\n          isActive: () => this.editor.isActive('heading', { level: 1 }),\n        },\n        {\n          icon: 'h-2',\n          title: 'Heading 2',\n          action: () => this.editor.chain().focus().toggleHeading({ level: 2 }).run(),\n          isActive: () => this.editor.isActive('heading', { level: 2 }),\n        },\n        {\n          // 지워도됨\n          icon: 'paragraph',\n          title: 'Paragraph',\n          action: () => this.editor.chain().focus().setParagraph().run(),\n          isActive: () => this.editor.isActive('paragraph'),\n        },\n        {\n          icon: 'list-unordered',\n          title: 'Bullet List',\n          action: () => this.editor.chain().focus().toggleBulletList().run(),\n          isActive: () => this.editor.isActive('bulletList'),\n        },\n        {\n          icon: 'list-ordered',\n          title: 'Ordered List',\n          action: () => this.editor.chain().focus().toggleOrderedList().run(),\n          isActive: () => this.editor.isActive('orderedList'),\n        },\n        {\n          icon: 'list-check-2',\n          title: 'Task List',\n          action: () => this.editor.chain().focus().toggleTaskList().run(),\n          isActive: () => this.editor.isActive('taskList'),\n        },\n        {\n          //지워도됨\n          icon: 'code-box-line',\n          title: 'Code Block',\n          action: () => this.editor.chain().focus().toggleCodeBlock().run(),\n          isActive: () => this.editor.isActive('codeBlock'),\n        },\n        {\n          //지워도됨\n          icon: 'double-quotes-l',\n          title: 'Blockquote',\n          action: () => this.editor.chain().focus().toggleBlockquote().run(),\n          isActive: () => this.editor.isActive('blockquote'),\n        },\n        {\n          icon: 'separator',\n          title: 'Horizontal Rule',\n          action: () => this.editor.chain().focus().setHorizontalRule().run(),\n        },\n        {\n          icon: 'text-wrap',\n          title: 'Hard Break',\n          action: () => this.editor.chain().focus().setHardBreak().run(),\n        },\n        {\n          //지워도됨\n          icon: 'format-clear',\n          title: 'Clear Format',\n          action: () => this.editor.chain()\n            .focus()\n            .clearNodes()\n            .unsetAllMarks()\n            .run(),\n        },\n        {\n          icon: 'arrow-go-back-line',\n          title: 'Undo',\n          action: () => this.editor.chain().focus().undo().run(),\n        },\n        {\n          icon: 'arrow-go-forward-line',\n          title: 'Redo',\n          action: () => this.editor.chain().focus().redo().run(),\n        },\n      ],\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.divider {\n  width: 2px;\n  height: 1.25rem;\n  background-color: #fff;\n  margin-left: 0.5rem;\n  margin-right: 0.75rem;\n}\n</style>"]}]}